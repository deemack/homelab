---
- name: Create mount points on MicroK8s Node | postgres
  ansible.builtin.file:
    path: /mnt/storage/wikijs/postgres
    state: directory
    mode: '0755'
    owner: nobody
    group: nogroup

- name: Create mount points on MicroK8s Node | wikijs
  ansible.builtin.file:
    path: /mnt/storage/wikijs/wikijs
    state: directory
    mode: '0777'
    owner: nobody
    group: nogroup

- name: Create wikijs namespace
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    name: wikijs
    api_version: v1
    kind: Namespace
    state: present

- name: Copy k8s yaml files to Node
  become: true
  copy:
    src: /home/vagrant/ansible/playbooks/roles/microk8s_wikijs/files/
    dest: /tmp/

- name: Apply Secrets
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/secrets_postgres.yml

- name: Create Persistent Volume | wikijs
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/pv_wikijs.yml

- name: Create Persistent Volume Claim | wikijs
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/pvc_wikijs.yml

- name: Create Persistent Volume | wikijs_db
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/pv_postgres.yml

- name: Create Persistent Volume Claim | wikijs_db
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/pvc_postgres.yml

- name: Create Config Map
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/config_wikijs.yml

- name: Create wikijs-pgsql Service
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/service_wikijs.yml

- name: Create wikijs Deployment
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: wikijs
    src: /tmp/deployment_wikijs.yml
    
- name: Wait for wikijs database to come online
  ansible.builtin.wait_for:
    timeout: 45

- name: Get wikijs database pod name
  command:
    cmd: microk8s kubectl get pods -n wikijs -l=app=pgsql --no-headers -o custom-columns=":metadata.name"
  register: pod_pgsql

- name: Copy wikijs database backup file to postgres pod
  copy:
    src: /mnt/storage/backup/wikijs/wikibackup.tar
    dest: /mnt/storage/wikijs/postgres/
    remote_src: true

- name: Drop wikijs database
  kubernetes.core.k8s_exec:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    namespace: wikijs
    pod: "{{ pod_pgsql.stdout }}"
    container: pgsql
    command: dropdb -U wikijs wikijs -f

- name: Create wikijs database
  kubernetes.core.k8s_exec:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    namespace: wikijs
    pod: "{{ pod_pgsql.stdout }}"
    container: pgsql
    command: createdb -U wikijs wikijs

- name: Restore wikijs database
  kubernetes.core.k8s_exec:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    namespace: wikijs
    pod: "{{ pod_pgsql.stdout }}"
    container: pgsql
    command: pg_restore -U wikijs -d wikijs /var/lib/postgresql/data/w>  tags: test

- name: Restart wikijs deployment
  command:
    cmd: microk8s kubectl rollout restart -n wikijs deployment/wikijs
