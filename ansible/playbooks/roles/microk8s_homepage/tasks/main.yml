---
- name: Create homepage namespace
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    name: homepage
    api_version: v1
    kind: Namespace
    state: present

- name: Copy k8s config files to Node
  become: true
  copy:
    src: /home/vagrant/ansible/playbooks/roles/microk8s_homepage/files/
    dest: /tmp/

- name: Fetch IP address of Host
  vars:
    command: "hostname -I | awk '{print $1}'"
  shell: "{{ command }}"
  register: host_ip

- name: Host IP
  debug:
    var: host_ip.stdout

- name: Create configMap from template
  become: true
  template:
    src: configmap_homepage.j2
    dest: /tmp/configmap_homepage.yml

- name: Apply  configMap
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: homepage
    src: /tmp/configmap_homepage.yml

- name: Create deployment
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: homepage
    src: /tmp/deployment_homepage.yml

- name: Create service from template
  become: true
  template:
    src: service_homepage.j2
    dest: /tmp/service_homepage.yml

- name: Create service
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: homepage
    src: /tmp/service_homepage.yml

- name: Create tls secret
  block:
    - name: Get IP of Nginx Ingress Controller
      shell: |
        microk8s kubectl get services ingress-nginx-controller -n ingress-nginx -o jsonpath="{.status.loadBalancer.ingress[0].ip}"
      register: nginx_controller_ip
    
    - name: print nginx controller ip
      debug:
        msg: "{{ nginx_controller_ip }}"
      
    - name: Create ssl key
      shell: |
        openssl genrsa -out ca.key 2048
      args:
        executable: /bin/bash
        
    - name: Create certificate
      shell:
        openssl req -x509 -new -nodes -key ca.key -sha256 -subj "/CN={{ nginx_controller_ip.stdout }}.nip.io" -days 1024 -out ca.crt -extensions san -config <(
        echo '[req]';
        echo 'distinguished_name=req';
        echo '[san]';
        echo 'subjectAltName=DNS:{{ nginx_controller_ip.stdout }}.nip.io')
      args:
        executable: /bin/bash
        
    - name: Deploy secret to cluster
      shell: |
        microk8s kubectl create secret tls https-homepage   --cert=ca.crt   --key=ca.key -n homepage

- name: Create ingress from template
  become: true
  template:
    src: ingress_homepage.j2
    dest: /tmp/ingress_homepage.yml

- name: Create Ingress
  kubernetes.core.k8s:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    namespace: homepage
    src: /tmp/ingress_homepage.yml


