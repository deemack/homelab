---
- name: Create directory for SSD mount
  ansible.builtin.file:
    path: /mnt/storage
    state: directory

- name:  Mount all volumes
  command:
    cmd: mount -a
  become: true

- name: install pre-requisites
  pip:
    name:
      - kubernetes

- name: Ubuntu | Install MicroK8s using snap
  community.general.snap:
    name: microk8s
    classic: true
    channel: '1.27'

- name: Ubuntu | Join vagrant user to microk8s group
  user:
     name: vagrant
     groups: microk8s
     append: yes

- name: Create kubectl alias for microk8s
  community.general.snap_alias:
    name: microk8s
    alias: kubectl

- name: enable dns addon
  command:
    cmd: kubectl enable dns

- name: enable hostpath-storage addon
  command:
    cmd: kubectl enable hostpath-storage

- name: enable dashboard addon
  command:
    cmd: kubectl enable dashboard

- name: enable ingress addon
  command:
    cmd: kubectl enable ingress

- name: enable host-access addon
  command:
    cmd: kubectl enable host-access

- name: Change kubernetes-dashboard service to NodePort
  kubernetes.core.k8s_service:
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    state: present
    name: kubernetes-dashboard
    namespace: kube-system
    inline:
      spec:
        externalTrafficPolicy: Cluster
        internalTrafficPolicy: Cluster
        ipFamilies:
        - IPv4
        ipFamilyPolicy: SingleStack
        ports:
        - nodePort: 32075
          port: 443
          protocol: TCP
          targetPort: 8443
        selector:
          k8s-app: kubernetes-dashboard
        sessionAffinity: None
        type: NodePort

- name: Add user to microk8s group
  user:
    name: 'dave'
    groups: microk8s
    append: yes

- name: Fetch IP address of Host
  vars:
    command: "hostname -I | awk '{print $1}'"
  shell: "{{ command }}"
  register: host_ip

- name: Host IP
  debug:
    var: host_ip.stdout

- name: Configure MetalLB
  become: yes
  block:
    - name: Copy MetalLB manifest
      copy:
        src: /home/vagrant/ansible/playbooks/roles/microk8s_cluster/files/
        dest: /tmp

    - name: Apply MetalLB manifest
      kubernetes.core.k8s:
        kubeconfig: /var/snap/microk8s/current/credentials/client.config
        state: present
        src: /tmp/manifest_metallb.yml

    - name: Wait for MetalLB to come online
      shell: microk8s kubectl get pods -n metallb-system -o json
      register: kubectl_get_pod
      until: kubectl_get_pod.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
      retries: 20
      delay: 15

    - name: Create MetalLB IPAddressPool from template
      become: true
      template:
        src: ipaddresspool_metallb.j2
        dest: /tmp/ipaddresspool_metallb.yml

    - name: Apply MetalLB IPAddressPool
      kubernetes.core.k8s:
        kubeconfig: /var/snap/microk8s/current/credentials/client.config
        state: present
        src: /tmp/ipaddresspool_metallb.yml

    - name: Apply MetalLB L2Advertisement
      kubernetes.core.k8s:
        kubeconfig: /var/snap/microk8s/current/credentials/client.config
        state: present
        src: /tmp/l2advertisement_metallb.yml
